/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_COMMON_H
#define _MOCK_COMMON_H

#include "unity.h"
#include "common.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_common_Init(void);
void mock_common_Destroy(void);
void mock_common_Verify(void);




#define quickPow_IgnoreAndReturn(cmock_retval) quickPow_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void quickPow_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, double cmock_to_return);
#define quickPow_StopIgnore() quickPow_CMockStopIgnore()
void quickPow_CMockStopIgnore(void);
#define quickPow_ExpectAndReturn(x, e, cmock_retval) quickPow_CMockExpectAndReturn(__LINE__, x, e, cmock_retval)
void quickPow_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, double x, int e, double cmock_to_return);
typedef double (* CMOCK_quickPow_CALLBACK)(double x, int e, int cmock_num_calls);
void quickPow_AddCallback(CMOCK_quickPow_CALLBACK Callback);
void quickPow_Stub(CMOCK_quickPow_CALLBACK Callback);
#define quickPow_StubWithCallback quickPow_Stub
#define isInteger_IgnoreAndReturn(cmock_retval) isInteger_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void isInteger_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define isInteger_StopIgnore() isInteger_CMockStopIgnore()
void isInteger_CMockStopIgnore(void);
#define isInteger_ExpectAndReturn(x, cmock_retval) isInteger_CMockExpectAndReturn(__LINE__, x, cmock_retval)
void isInteger_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, double x, int cmock_to_return);
typedef int (* CMOCK_isInteger_CALLBACK)(double x, int cmock_num_calls);
void isInteger_AddCallback(CMOCK_isInteger_CALLBACK Callback);
void isInteger_Stub(CMOCK_isInteger_CALLBACK Callback);
#define isInteger_StubWithCallback isInteger_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
